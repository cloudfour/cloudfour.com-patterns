@use "../compiled/tokens/scss/brightness";
@use "../compiled/tokens/scss/color";
@use "../compiled/tokens/scss/ease";
@use "../compiled/tokens/scss/font-weight";
@use "../compiled/tokens/scss/scale";
@use "../compiled/tokens/scss/size";
@use "../compiled/tokens/scss/transition";
@use "./focus";
@use "./ms";
@use "./unit";
@use "./theme";

/**
 * Themed properties
 */

@include theme.props() {
  --theme-color-background-button-default: #{color.$brand-primary};
  --theme-color-background-button-secondary: transparent;
  // --theme-color-background-button-icon-slash-default: #{color.$text-light-emphasis};
  --theme-color-background-button-icon-slash-default: #{color.$brand-primary};
  --theme-color-border-button-default: #{color.$brand-primary-dark};
  --theme-color-border-button-secondary: #{color.$brand-primary-light};
  --theme-color-text-button-secondary: var(--theme-color-text-action);
  --theme-color-text-button-tertiary: var(--theme-color-text-action);
}

@include theme.props(dark) {
  --theme-color-background-button-default: #{color.$brand-primary-dark};
  --theme-color-background-button-secondary: transparent;
  --theme-color-background-button-icon-slash-default: #{color.$brand-primary-dark};
  --theme-color-border-button-default: #{color.$brand-primary-darker};
  --theme-color-border-button-secondary: #{color.$brand-primary-dark};
  --theme-color-text-button-secondary: var(--theme-color-text-action);
  --theme-color-text-button-tertiary: var(--theme-color-text-action);
}

/**
 * Button object
 *
 * 1. More overtly actionable cursor appearance. Recently this tweak has come
 *    with some contention, but our experience has been that the average user
 *    doesn't differentiate cursor styles between different styles of action.
 * 2. Although we will be overtly setting some typographic properties, the
 *    shorthand is helpful for completely overriding all system font styles as
 *    a starting point.
 * 3. We set a height to coordinate consistently with `c-input`. Unfortunately
 *    browsers don't consistently size inputs without setting `height`.
 */

@mixin default {
  background: var(--theme-color-background-button-default);
  border-color: var(--theme-color-border-button-default);
  border-radius: size.$border-radius-medium;
  border-style: solid;
  border-width: size.$edge-medium;
  color: color.$text-light-emphasis;
  cursor: pointer; /* 1 */
  display: inline-block;
  font: inherit; /* 2 */
  font-style: normal;
  font-weight: font-weight.$semibold;
  height: size.$height-control-default; /* 3 */
  line-height: normal;
  padding: size.$padding-control-vertical size.$padding-control-horizontal;
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: filter transition.$slow ease.$out,
    transform transition.$quick ease.$out;
  user-select: none;

  /**
   * Transform, opacity and filter changes are performant and will work across
   * many more stylistic modifiers than specific color shifts.
   */

  &:hover {
    filter: brightness(brightness.$control-brighten);
    transform: scale(scale.$effect-grow);
  }

  &:active {
    filter: brightness(brightness.$control-dim);
    transform: scale(scale.$effect-shrink);
  }

  &:disabled {
    cursor: not-allowed;
    filter: grayscale(60%);
    opacity: 0.85;
    transform: none;
  }

  /**
   * Toggling button
   */
  &[aria-pressed='true'] {
    .c-button__effect {
      display: inline-block;
      position: relative;

      &::before,
      &::after {
        border-radius: 98rem;
        content: '';
        position: absolute;
        width: 2px;
      }

      &::before {
        background-color: currentColor;
        height: 80%;
        left: 46%;
        top: 46%;
        transform: translate(0, -50%) rotate(-45deg);
        z-index: 1;
      }

      &::after {
        background-color: var(
          --theme-color-background-button-icon-slash-default
        );
        height: 100%;
        left: 47%;
        top: 43%;
        transform: translate(50%, -50%) rotate(-45deg);
      }
    }
  }

  @include focus.focus-visible {
    box-shadow: 0 0 0 size.$edge-large color.$brand-primary-lighter;
  }
}

/**
 * Modifier: Secondary
 */

@mixin secondary {
  background-color: var(--theme-color-background-button-secondary);
  border-color: var(--theme-color-border-button-secondary);
  color: var(--theme-color-text-button-secondary);
}

/**
 * Modifier: Tertiary
 */

@mixin tertiary {
  background-color: transparent;
  border-color: transparent;
  color: var(--theme-color-text-button-tertiary);
}
