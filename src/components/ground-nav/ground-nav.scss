@use '../../design-tokens/breakpoint.yml';
@use '../../design-tokens/colors.yml';
@use '../../design-tokens/font.yml';
@use '../../mixins/ms';
@use '../../mixins/unit';

// Whitespace used for gaps, padding and margin
// (It uses `rem` so space will be consistent throughout the component)
$_ground-nav-space: ms.step(1, 1rem);
// Negative value used to reduce the space around elements as well as position elements.
$_ground-nav-negative-space: #{unit.strip($_ground-nav-space) * -1}rem;
$_ground-nav-border-width: 3px;
$_ground-nav-border-style: solid;
$_ground-nav-border-color: colors.$gray-light;

.c-ground-nav__action,
.c-ground-nav__content {
  padding: $_ground-nav-space;
}

.c-ground-nav__action-inner {
  position: relative;

  @media (min-width: breakpoint.$l) {
    align-items: center;
    display: flex;
  }
}

/**
 * 1. Creates space between the action lead in and action title.
 * 2. Adds horizontal space when these elements are side by side.
 */
.c-ground-nav__action-title {
  margin-top: $_ground-nav-space; /* 1 */

  @media (min-width: breakpoint.$l) {
    margin: ms.step(4) $_ground-nav-space; /* 2 */
  }
}

/**
 * The illustration is aligned with the footer content.
 * As the screen size increases, we decrease the size
 * of the illustration so that it doesn't get too large.
 */

.c-ground-nav__action-illustration {
  bottom: $_ground-nav-negative-space;
  position: absolute;
  right: $_ground-nav-negative-space;
  width: 40%;

  @media (min-width: breakpoint.$m) {
    right: 0;
    width: calc(100% / 3);
  }

  @media (min-width: breakpoint.$l) {
    width: 25%;
  }
}

.c-ground-nav__content {
  background-color: colors.$gray-lighter;
}

.c-ground-nav__content-inner {
  position: relative;
}

/**
 * Creates vertical space between elements.
 */
.c-ground-nav__content-inner > * + * {
  margin-top: $_ground-nav-space;
}

/**
 * 1. Removes `margin-top` so the organization information is
 *    aligned with the other footer elements
 */
.c-ground-nav__organization {
  font-style: normal;
  margin-top: 0; /* 1 */
}

.c-ground-nav__organization-name {
  font-weight: font.$weight-bold;
}

/**
 * Fallback style for browsers that don't support CSS grid.
 */

.c-ground-nav__social {
  @media (min-width: breakpoint.$l) {
    margin-top: 0;
    position: absolute;
    right: 0;
    top: 0;
  }
}

.c-ground-nav__social-icon {
  font-size: ms.step(2);
}

/**
 * Fallback style for browsers that don't support CSS grid.
 */

.c-ground-nav__menu {
  border-top: $_ground-nav-border-width $_ground-nav-border-style
    $_ground-nav-border-color;
  padding-top: $_ground-nav-space;

  @media (min-width: breakpoint.$m) {
    border-top: none;
    left: 40%;
    margin-top: 0;
    padding-top: 0;
    position: absolute;
    top: 0;
  }

  @media (min-width: breakpoint.$l) {
    left: calc(100% / 3);
  }
}

/**
 * Divides the menu into 2 columns.
 */
.c-ground-nav__menu-items {
  column-gap: $_ground-nav-space;
  columns: 2;
}

/**
 * The content in this section may be different depending on where
 * where the component is being used. When there are multiple elements
 * in section, they are displayed side by side on large screens.
*/
.c-ground-nav__byline {
  border-top: $_ground-nav-border-width $_ground-nav-border-style
    $_ground-nav-border-color;
  font-size: ms.step(-1);
  padding-top: $_ground-nav-space;

  @media (min-width: breakpoint.$l) {
    border-top: none;
    display: flex;
    justify-content: flex-end;
    padding-top: 0;
  }
}

/**
 * 1. Creates vertical space between elements when there is more
 *    than one element.
 * 2. Removes `margin-top` when elements are side by side.
 */
.c-ground-nav__byline > * + * {
  margin-top: $_ground-nav-space; /* 1 */

  @media (min-width: breakpoint.$l) {
    margin-top: 0; /* 2 */
  }
}

/**
 * We use CSS grid when supported by the browser.
 */
@supports (display: grid) {
  .c-ground-nav__content-inner {
    display: grid;
    grid-gap: $_ground-nav-space;
    margin: 0 auto;

    /**
     * The visual order of the footer content is different than the
     * semantic order. We use grid areas to easily place content
     * within the grid.
     */
    @media (min-width: breakpoint.$m) {
      grid-template-areas:
        'organization menu'
        'social social'
        'byline byline';
    }

    @media (min-width: breakpoint.$l) {
      grid-template-areas:
        'organization menu social'
        'byline byline byline';
    }
  }

  /**
   * Removes the margin used by our fallback design. Grid allows us to
   * use `grid-gap` to create consistent space between elements.
   */
  .c-ground-nav__content-inner > * + * {
    margin: 0;
  }

  .c-ground-nav__organization {
    @media (min-width: breakpoint.$m) {
      grid-area: organization;
    }
  }

  .c-ground-nav__menu {
    position: static;

    @media (min-width: breakpoint.$m) {
      grid-area: menu;
    }
  }

  .c-ground-nav__social {
    position: static;

    @media (min-width: breakpoint.$m) {
      grid-area: social;
    }

    @media (min-width: breakpoint.$l) {
      justify-self: end;
    }
  }

  .c-ground-nav__byline {
    @media (min-width: breakpoint.$m) {
      grid-area: byline;
    }
  }
}
