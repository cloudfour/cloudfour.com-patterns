@use "../design-tokens/colors.yml";
@use "../design-tokens/font.yml";
@use "../design-tokens/motion.yml";
@use "../design-tokens/sizes.yml";
@use "./focus";
@use "./ms";
@use "./unit";
@use "./theme";

/**
 * Themed properties
 */

@include theme.props() {
  --theme-color-background-button-default: #{colors.$primary-brand};
  --theme-color-background-button-secondary: transparent;
  --theme-color-border-button-default: #{colors.$primary-brand-dark};
  --theme-color-border-button-secondary: #{colors.$primary-brand-light};
  --theme-color-text-button-secondary: var(--theme-color-text-action);
  --theme-color-text-button-tertiary: var(--theme-color-text-action);
}

@include theme.props(dark) {
  --theme-color-background-button-default: #{colors.$primary-brand-dark};
  --theme-color-background-button-secondary: transparent;
  --theme-color-border-button-default: #{colors.$primary-brand-darker};
  --theme-color-border-button-secondary: #{colors.$primary-brand-dark};
  --theme-color-text-button-secondary: var(--theme-color-text-action);
  --theme-color-text-button-tertiary: var(--theme-color-text-action);
}

/**
 * Button object
 *
 * 1. More overtly actionable cursor appearance. Recently this tweak has come
 *    with some contention, but our experience has been that the average user
 *    doesn't differentiate cursor styles between different styles of action.
 * 2. Although we will be overtly setting some typographic properties, the
 *    shorthand is helpful for completely overriding all system font styles as
 *    a starting point.
 * 3. We set a height to coordinate consistently with `c-input`. Unfortunately
 *    browsers don't consistently size inputs without setting `height`.
 */

@mixin default {
  background: var(--theme-color-background-button-default);
  border-color: var(--theme-color-border-button-default);
  border-radius: sizes.$radius-medium;
  border-style: solid;
  border-width: sizes.$edge-medium;
  color: colors.$text-light-emphasis;
  cursor: pointer; /* 1 */
  display: inline-block;
  font: inherit; /* 2 */
  font-style: normal;
  font-weight: font.$weight-semibold;
  height: sizes.$control-height; /* 3 */
  line-height: normal;
  padding: sizes.$control-pad-vertical sizes.$control-pad-horizontal;
  position: relative;
  text-align: center;
  text-decoration: none;
  transition: filter motion.$speed-slow motion.$ease-out,
    transform motion.$speed-quick motion.$ease-out;
  user-select: none;

  /**
   * Transform, opacity and filter changes are performant and will work across
   * many more stylistic modifiers than specific color shifts.
   */

  &:hover {
    filter: brightness(motion.$control-brighten);
    transform: scale(motion.$control-grow);
  }

  &:active {
    filter: brightness(motion.$control-dim);
    transform: scale(motion.$control-shrink);
  }

  &:disabled {
    cursor: not-allowed;
    filter: grayscale(60%);
    opacity: 0.85;
    transform: none;
  }

  @include focus.focus-visible {
    box-shadow: 0 0 0 sizes.$edge-large colors.$primary-brand-lighter;
  }
}

/**
 * Modifier: Secondary
 */

@mixin secondary {
  background-color: var(--theme-color-background-button-secondary);
  border-color: var(--theme-color-border-button-secondary);
  color: var(--theme-color-text-button-secondary);
}

/**
 * Modifier: Tertiary
 */

@mixin tertiary {
  background-color: transparent;
  border-color: transparent;
  color: var(--theme-color-text-button-tertiary);
}
