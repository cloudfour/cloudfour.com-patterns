@use '../../compiled/tokens/scss/size';
@use '../../mixins/spacing';

/**
 * Page container
 *
 * 1. Avoid grid blowouts by specifying the `min-width` of the column.
 *    @see https://css-tricks.com/you-want-minmax10px-1fr-not-1fr/
 * 2. Attempts to fill the available area (assuming `height: 100%` is applied
 *    to all parent elements) & keep the footer at the bottom of that area.
 *    @see https://css-tricks.com/couple-takes-sticky-footer/#there-is-grid
 */

.o-page {
  display: grid;
  grid-template-columns: minmax(0, 1fr); // 1
  grid-template-rows: minmax(0, auto) 0 minmax(0, 1fr) minmax(0, auto); // 2
  min-block-size: 100%;
}

/**
 * These classes aren't strictly required, but they keep the HTML source a
 * little easier to read while also supporting swapping of source order if
 * that's ever something that content calls for.
 */

.o-page__header {
  grid-row: 1;
}

/**
 * An optional `alert` block can be used to pass an Alert component
 *
 * 1. The alert should overlap the content above slightly
 */

.o-page__alert {
  @include spacing.fluid-padding-inline;
  display: grid;
  grid-row: 2;
  inset-block-start: calc(size.$overlap-large * -1); // 1
  justify-content: center;
  position: relative;
}

.o-page__content {
  grid-row: 3;
}

.o-page__footer {
  grid-row: 4;
}
