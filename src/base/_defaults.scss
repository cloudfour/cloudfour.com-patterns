@use "../compiled/tokens/scss/color";
@use "../compiled/tokens/scss/size";
@use "../mixins/ms";
@use "../mixins/theme";

/**
 * Sensible box model
 */

*,
::before,
::after {
  box-sizing: border-box;
}

/**
 * Remove default spacing from elements. We'll be managing these directly at a
 * layout or component level.
 *
 * Element list derived from browser default stylesheets.
 *
 * @see https://stackoverflow.com/a/3980775/5175805
 */

blockquote,
body,
button,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
input,
ol,
p,
pre,
select,
textarea,
ul {
  margin: 0;
}

/**
 * Forces the viewport to be filled. Necessary for the footer to "stick" to the
 * bottom of short pages.
 *
 * @see https://css-tricks.com/couple-takes-sticky-footer/#there-is-grid
 */

html,
body {
  height: 100%;
}

/**
 * We apply theme rules here rather than `:root` because custom background
 * colors, iframe embeds, etc. will defer to or attempt to change the `body`
 * background so it's important to establish defaults.
 */

body {
  @include theme.rules;
}

/**
 * Default link color
 */

a {
  color: var(--theme-color-text-action);
}

/**
 * 1. Block display is usually what we want
 * 2. Remove strange space-below when inline
 * 3. Responsive by default
 *
 * @see https://github.com/mozdevs/cssremedy
 */

audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
  display: block; /* 1 */
  max-width: 100%; /* 3 */
  vertical-align: middle; /* 2 */
}

/**
 * Embedded elements with consistent aspect ratios require this to maintain
 * that ratio when resized.
 */

canvas,
img,
svg,
video {
  height: auto;
}

/**
 * It's pretty arbitrary that audio elements are 300px wide by default.
 */

audio {
  width: 100%;
}

/**
 * Code blocks
 *
 * 1. Don't allow code blocks to overflow willy-nilly.
 */

pre {
  background: color.$brand-primary-darker;
  color: color.$text-light;
  overflow: auto; /* 1 */
  padding: ms.step(1);
}

/**
 * When certain monospace inline elements are not within a preformatted block or
 * a link, we offset their color from surrounding content.
 */

*:not(pre):not(a) > code,
*:not(pre):not(a) > kbd {
  color: var(--theme-color-text-code);
}

/**
 * Some additional styles are added to `kbd` elements because it's fun to
 * embrace just a little skeuomorphism and make them look like keys. ⌨️
 *
 * 1. We use a shadow instead of `border-bottom-width` to apply a bit of depth
 *    because it won't visually impact the element's rounded corners.
 * 2. Without a `min-width`, single character keys (which is most of them)
 *    appear rather skinny and strange.
 */

*:not(pre):not(a) > kbd {
  background: var(--theme-color-background-kbd);
  border: size.$edge-small solid var(--theme-color-border-kbd);
  border-radius: size.$border-radius-small;
  box-shadow: 0 size.$edge-small 0 0 var(--theme-color-border-kbd); /* 1 */
  display: inline-block;
  min-width: ms.step(2); /* 2 */
  padding: 0 ms.step(-6);
  text-align: center;
}

/**
 * Diff elements
 */

del {
  opacity: var(--theme-opacity-del);
}

/**
 * IE10 and earlier still show borders around linked images, and all browsers
 * still show borders around iframe elements by default.
 */

iframe,
img {
  border-style: none;
}

/**
 * IE10 and earlier do not respect the `hidden` attribute.
 *
 * @see https://cloudfour.com/thinks/see-no-evil-hidden-content-and-accessibility/
 */

[hidden] {
  display: none !important;
}

/**
 * IE11 and earlier display some HTML5 elements as `inline` by default.
 */

article,
aside,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section {
  display: block;
}

/**
 * Shared indentation for typographic blocks
 */

ul,
ol,
blockquote {
  padding-left: size.$spacing-type-block-indent;
}

/**
 * Adjacent children of blockquotes should include some default vertical rhythm.
 * We use the same design token as the `o-rhythm` pattern for consistency.
 *
 * @see https://alistapart.com/article/axiomatic-css-and-lobotomized-owls/
 */

blockquote > * + * {
  margin-top: size.$rhythm-default;
}

/**
 * Apply some sensible defaults to tables
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
  overflow-x: auto;
  text-align: left;
  width: 100%;
}

/*
 * 1. Removes default margin
 * 2. Center content
 * 3. Space between elements inside <figure>
 */

figure {
  margin: 0; /* 1 */

  & > * {
    margin-left: auto; /* 2 */
    margin-right: auto; /* 2 */
  }

  & > * + * {
    margin-top: ms.step(-1); /* 3 */
  }
}

figcaption {
  font-size: size.$font-small;
  font-style: italic;
  text-align: center;
}

address {
  font-style: normal;
}
