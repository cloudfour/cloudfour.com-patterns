@use '../../compiled/tokens/scss/breakpoint';
@use '../../compiled/tokens/scss/color';
@use '../../compiled/tokens/scss/size';
@use '../../mixins/spacing';
@use '../../mixins/theme';
@use 'sass:color' as sasscolor;

/**
 * Themed properties
 */

@include theme.props {
  --theme-color-border-hype-group-object: #{sasscolor.change(
      color.$brand-primary-darker,
      $alpha: 0.1
    )};
}

@include theme.props(dark) {
  --theme-color-border-hype-group-object: #{sasscolor.change(
      color.$text-light-emphasis,
      $alpha: 0.1
    )};
}

.o-hype-group {
  contain: layout;

  @media (width >= breakpoint.$m) {
    column-gap: spacing.$fluid-gap;
    display: grid;
    grid-template-areas:
      '. stage'
      'intro stage'
      'content stage'
      '. stage';
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: minmax(0, 1fr) repeat(2, minmax(0, auto)) minmax(0, 1fr);
  }

  @media (width >= breakpoint.$l) {
    grid-template-areas:
      '. . stage'
      'intro intro stage'
      'content content stage'
      '. . stage';
    grid-template-columns: repeat(3, 1fr);
  }
}

.o-hype-group--reverse {
  @media (width >= breakpoint.$m) {
    grid-template-areas:
      'stage .'
      'stage intro'
      'stage content'
      'stage .';
  }

  @media (width >= breakpoint.$l) {
    grid-template-areas:
      'stage . .'
      'stage intro intro'
      'stage content content'
      'stage . .';
  }
}

.o-hype-group__intro {
  grid-area: intro;
}

.o-hype-group__object {
  container-type: size;
  grid-area: stage;
  position: relative;

  @media (width < breakpoint.$m) {
    aspect-ratio: 2/3;
    float: right;
    inline-size: calc(50% - #{size.$spacing-gap-inline-small});
    margin: size.$spacing-gap-inline-small;
    margin-inline-end: 0;

    .o-hype-group--circle-object & {
      shape-outside: circle(58% at 66% 50%);
    }

    @media (width >= breakpoint.$s) {
      aspect-ratio: 4/5;
      inline-size: calc(100% / 3 - #{size.$spacing-gap-inline-small});

      .o-hype-group--circle-object & {
        shape-outside: circle(65% at 80% 50%);
      }
    }
  }

  @media (width >= breakpoint.$l) {
    margin-block: spacing.$fluid-spacing-block-negative-overlap-partial;
  }

  @media (width >= breakpoint.$xl) {
    margin-block: spacing.$fluid-spacing-block-negative-overlap;
  }
}

.o-hype-group__object-inner {
  aspect-ratio: 1;
  block-size: 100%;
  border-radius: size.$border-radius-large;
  display: flex;
  height: 100cqmax;
  inline-size: auto;
  overflow: hidden;
  position: relative;

  .o-hype-group--circle-object & {
    border-radius: size.$border-radius-full;
  }

  @media (width >= breakpoint.$m) {
    inset-block-start: 50%;
    position: absolute;
    transform: translateY(-50%);

    .o-hype-group--reverse & {
      inset-inline-end: 0;
    }
  }

  .o-hype-group--outline-object &::after {
    border: size.$edge-medium solid var(--theme-color-border-hype-group-object);
    border-radius: inherit;
    content: '';
    inset: 0;
    pointer-events: none;
    position: absolute;
  }

  > img,
  > picture > img {
    object-fit: cover;
  }
}

.o-hype-group__content {
  grid-area: content;
  margin-block-start: var(--rhythm, #{size.$rhythm-default});
  max-inline-size: size.$max-width-prose;
}
