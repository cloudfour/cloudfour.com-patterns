@use '../../design-tokens/breakpoint.yml';
@use '../../design-tokens/colors.yml';
@use '../../design-tokens/font.yml';
@use '../../mixins/ms';
@use '../../mixins/unit';

// Whitespace used for gaps, padding and margin
// (It uses `rem` so space will be consistent throughout the component)
$_ground-nav-space: ms.step(1, 1rem);
// Negative value used to reduce the space around elements as well as position elements.
$_ground-nav-negative-space: #{unit.strip($_ground-nav-space) * -1}rem;
$_ground-nav-divider-height: 3px;
$_ground-nav-divider-color: colors.$gray-light;

.c-ground-nav__action,
.c-ground-nav__content {
  padding: $_ground-nav-space;
}

.c-ground-nav__action-inner {
  position: relative;

  @media (min-width: breakpoint.$l) {
    align-items: center;
    display: flex;
  }
}

/**
 * Using `position: absolute` so that the illustration aligned
 * to the footer content.
 */

.c-ground-nav__action-illustration {
  bottom: $_ground-nav-negative-space;
  position: absolute;
  right: $_ground-nav-negative-space;
  width: 40%;

  @media (min-width: breakpoint.$s) {
    width: 30%;
  }

  @media (min-width: breakpoint.$m) {
    right: 0;
    width: 25%;
  }
}

/**
 * Fallback for browsers that don't support grid.
 */
.c-ground-nav__content-inner {
  @media (min-width: breakpoint.$m) {
    display: flex;
    flex-wrap: wrap;
    margin: $_ground-nav-negative-space;
  }
}

/**
 * 1. Creates vertical space between elements.
 * 2. Adds horizontal space when elements are side by side.
 */
.c-ground-nav__content-inner > * + * {
  margin-top: $_ground-nav-space; /* 1 */

  @media (min-width: breakpoint.$l) {
    margin: $_ground-nav-space; /* 2 */
  }
}

/**
 * 1. Creates space between the action lead in and action title.
 * 2. Adds horizontal space when these elements are side by side.
 */
.c-ground-nav__action-title {
  margin-top: $_ground-nav-space; /* 1 */

  @media (min-width: breakpoint.$l) {
    margin: $_ground-nav-space; /* 2 */
  }
}

.c-ground-nav__content {
  background-color: colors.$gray-lighter;
}

/**
 * Removes `margin-top` so the organization information is aligned with
 * the other footer elements
 */
.c-ground-nav__organization {
  @media (max-width: breakpoint.$l) {
    margin-top: 0;
  }
}

.c-ground-nav__organization-name {
  font-style: normal;
  font-weight: font.$weight-bold;
}

.c-ground-nav__social-action {
  font-size: ms.step(2);
}

/**
 * Divides the menu into 2 columns.
 */
.c-ground-nav__menu-items {
  column-gap: $_ground-nav-space;
  columns: 2;
}

.c-ground-nav__divider {
  background-color: $_ground-nav-divider-color;
  border-style: none;
  height: $_ground-nav-divider-height;
  width: 100%;
}

.c-ground-nav__copyright {
  font-size: ms.step(-1);
}

/**
 * The content in this section may be different depending on where
 * where the component is being used. This creates vertical space
 * between elements when there is more than one element.
 */
.c-ground-nav__copyright > * + * {
  margin-top: $_ground-nav-space;
}

/**
 * We use CSS grid when supported by the browser.
 */
@supports (display: grid) {
  .c-ground-nav__content-inner {
    display: grid;
    grid-gap: $_ground-nav-space;
    margin: 0 auto;

    /**
     * The visual order of the footer content is different than the
     * semantic order. We use grid areas to easily place content
     * within the grid.
     */
    @media (min-width: breakpoint.$m) {
      grid-template-areas:
        "organization menu"
        "social social"
        "divider divider"
        "copyright copyright";
    }

    @media (min-width: breakpoint.$l) {
      grid-template-areas:
        "organization menu social"
        "copyright copyright copyright";
    }
  }

  /**
   * Removes the margin used by our fallback design. Grid allows us to
   * use `grid-gap` to create consistent space between elements.
   */
  .c-ground-nav__content-inner > * + * {
    margin: 0;
  }

  .c-ground-nav__organization {
    @media (min-width: breakpoint.$m) {
      grid-area: organization;
    }
  }

  .c-ground-nav__menu {
    @media (min-width: breakpoint.$m) {
      grid-area: menu;
    }
  }

  .c-ground-nav__social {
    @media (min-width: breakpoint.$m) {
      grid-area: social;
    }

    @media (min-width: breakpoint.$l) {
      justify-self: end;
    }
  }

  .c-ground-nav__divider {
    @media (min-width: breakpoint.$m) {
      grid-area: divider;
    }
  }

  .c-ground-nav__copyright {
    @media (min-width: breakpoint.$m) {
      grid-area: copyright;
    }

    /**
     * 1. When there are multiple elements in this section, they
     *    are display side by side.
     */
    @media (min-width: breakpoint.$l) {
      display: flex; /* 1 */
      justify-content: flex-end;
    }
  }

  /**
     * 1. Removes `margin-top` when elements in this section are
     *    side by side.
     */
  .c-ground-nav__copyright > * + * {
    @media (min-width: breakpoint.$l) {
      margin-top: 0; /* 1 */
    }
  }
}
